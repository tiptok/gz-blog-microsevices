// Code generated by goctl. DO NOT EDIT!
// Source: product.proto

package productservice

import (
	"context"

	"github.com/tiptok/gz-blog-microsevices/api/protobuf/product/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateProductRequest  = v1.CreateProductRequest
	CreateProductResponse = v1.CreateProductResponse
	DeleteProductRequest  = v1.DeleteProductRequest
	DeleteProductResponse = v1.DeleteProductResponse
	GetProductRequest     = v1.GetProductRequest
	GetProductResponse    = v1.GetProductResponse
	ListProductsRequest   = v1.ListProductsRequest
	ListProductsResponse  = v1.ListProductsResponse
	Product               = v1.Product
	UpdateProductRequest  = v1.UpdateProductRequest
	UpdateProductResponse = v1.UpdateProductResponse

	ProductService interface {
		GetProduct(ctx context.Context, in *GetProductRequest, opts ...grpc.CallOption) (*GetProductResponse, error)
		CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error)
		UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error)
		DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*DeleteProductResponse, error)
		ListProducts(ctx context.Context, in *ListProductsRequest, opts ...grpc.CallOption) (*ListProductsResponse, error)
	}

	defaultProductService struct {
		cli zrpc.Client
	}
)

func NewProductService(cli zrpc.Client) ProductService {
	return &defaultProductService{
		cli: cli,
	}
}

func (m *defaultProductService) GetProduct(ctx context.Context, in *GetProductRequest, opts ...grpc.CallOption) (*GetProductResponse, error) {
	client := v1.NewProductServiceClient(m.cli.Conn())
	return client.GetProduct(ctx, in, opts...)
}

func (m *defaultProductService) CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error) {
	client := v1.NewProductServiceClient(m.cli.Conn())
	return client.CreateProduct(ctx, in, opts...)
}

func (m *defaultProductService) UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error) {
	client := v1.NewProductServiceClient(m.cli.Conn())
	return client.UpdateProduct(ctx, in, opts...)
}

func (m *defaultProductService) DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*DeleteProductResponse, error) {
	client := v1.NewProductServiceClient(m.cli.Conn())
	return client.DeleteProduct(ctx, in, opts...)
}

func (m *defaultProductService) ListProducts(ctx context.Context, in *ListProductsRequest, opts ...grpc.CallOption) (*ListProductsResponse, error) {
	client := v1.NewProductServiceClient(m.cli.Conn())
	return client.ListProducts(ctx, in, opts...)
}
