syntax = "v1"

info(
	title: "约板小程序"
	desc: "微信相关交互"
	author: "tiptok"
	email: "785409885@qq.com"
	version: "v1.0.0"
)

@server(
	prefix: skateboard/mini
	group: skateboard
)

service mini {
	@doc  "微信登录"
	@handler login
	post /login (LoginRequest) returns (LoginResponse)
	@doc  "用户信息"
	@handler userInfo
	post /user-info (UserInfoRequest) returns (UserInfoResponse)
	@doc  "门店列表"
	@handler shopList
	post /shop-list (ShopListRequest) returns (ShopListResponse)
	@doc  "门店教练列表"
	@handler shopCoachList
	post /coach-list (CoachListRequest) returns (CoachListResponse)
	@doc  "门店教练预约"
	@handler coachReserve
	post /coach-reserve (CoachReserveRequest) returns (CoachReserveResponse)
}

type(
	User struct{
		UserId int `json:"userId,omitempty"`         // 用户ID
		ClientType string `json:"clientType,omitempty"`// 客户端类型 1:wx-stu 2:wx-coach
		Name string `json:"name,omitempty"`			// 名称
	    Avator string `json:"avator,omitempty"`  	// 头像
		Phone string `json:"phone,omitempty"`		// 手机号
		WXNumber string `json:"wxNumber,omitempty"` // 微信编号
		Password string `json:"password,omitempty"` // 密码 MD5()
		WXOpenId string `json:"wxOpenId,omitempty"` //微信认证 OpenID
		UserCourseInfo *UserCourseInfo `json:"userCourseInfo,omitempty"` //
	}
	UserCourseInfo struct{

	}
	Shop struct{
		ShopId int  `json:"shopId,omitempty"`
		Name string `json:"name,omitempty"`
		Introduction string `json:"introduction,omitempty"`
		Address Address `json:"address"`
		Rank int 		`json:"rank,omitempty"`
	}
	Coach struct{
		CoachId         int      `json:"coachId,omitempty"`
		UserId 			int      `json:"userId,omitempty"`
		ShopId          int      `json:"shopId,omitempty"`
		Name            string   `json:"name,omitempty"`
		JobTitle        string   `json:"jobTitle,omitempty"`
		Labels          []string `json:"labels,omitempty"`
		TotalLessonTime int      `json:"totalLessonTime,omitempty"`
		Rank            int      `json:"rank,omitempty"`

		Shop           *Shop     `json:"shop,omitempty"`
		User 		   *User     `json:"user,omitempty"`
	}
	Activity struct{
		Address Address `json:"address"`
	}
	Address struct{
		Address string `json:"address,omitempty"`
		Lon float64 `json:"lon,omitempty"`
		Lat float64 `json:"lat,omitempty"`
	}
)

// **************************  skateboard/mini proto **************************

type (
	LoginRequest struct{
		ClientType string `json:"clientType"`
		WXAuthCode  string `json:"wxAuthcode,optional"`
		Phone string `json:"phone,optional"`
		Password string `json:"password,optional"`
	}
	LoginResponse struct{
		Token string `json:"token"`
	}
)

type (
	UserInfoRequest struct{
	}
	UserInfoResponse struct{
		User User `json:"user"`
	}
)

type (
	ShopListRequest struct{
		Page int `json:"page"`
		Size int `json:"size"`
	}
	ShopListResponse struct{
		Shops []Shop `json:"shops"`
		Total int    `json:"total"`
	}
)

type (
	CoachListRequest struct{
		ShopId int `json:"shopId"`
	}
	CoachListResponse struct{
		Coaches []Coach `json:"coach"`
		Total   int     `json:"total"`
	}
)

type (
	CoachReserveRequest struct{
		CoachId       int    `json:"coachId"`
		TimeSpanBegin string `json:"timeSpanBegin"`
		TimeSpanEnd   string `json:"timeSpanEnd"`
	}
	CoachReserveResponse struct{
	}
)


// **************************  skateboard/system proto **************************