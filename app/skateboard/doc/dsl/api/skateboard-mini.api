syntax = "v1"

info(
	title: "约板小程序"
	desc: "微信相关交互"
	author: "tiptok"
	email: "785409885@qq.com"
	version: "v1.0.0"
)

import(
	"model/skateboard.api"
)

@server(
	prefix: skateboard
	group: skateboard
)

service mini {
	// **************************  skateboard/mini proto **************************
	@doc  "微信登录"
	@handler miniLogin
	post /mini/login (LoginRequest) returns (LoginResponse)
	@doc  "用户信息"
	@handler miniUserInfo
	post /mini/user-info (UserInfoRequest) returns (UserInfoResponse)
	@doc  "门店列表"
	@handler miniShopList
	post /mini/shop-list (ShopListRequest) returns (ShopListResponse)
	@doc  "门店教练列表"
	@handler miniShopCoachList
	post /mini/coach-list (CoachListRequest) returns (CoachListResponse)
	@doc  "门店教练预约"
	@handler miniCoachReserve
	post /mini/coach-reserve (CoachReserveRequest) returns (CoachReserveResponse)
	
	// **************************  skateboard/system proto **************************
	@doc  "门店教练创建"
	@handler systemCoachCreate
	post /system/coach (CoachCreateRequest) returns (CoachCreateResponse)
	
	@doc  "门店详情"
	@handler systemShopGet
	post /system/shop/:id (ShopGetRequest) returns (ShopGetResponse)
	@doc  "门店保存"
	@handler systemShopSave
	post /system/shop (ShopSaveRequest) returns (ShopSaveResponse)
	@doc  "门店删除"
	@handler systemShopDelete
	delete /system/shop/:id (ShopDeleteRequest) returns (ShopDeleteResponse)
	@doc  "门店更新"
	@handler systemShopUpdate
	put /system/shop/:id (ShopUpdateRequest) returns (ShopUpdateResponse)
	@doc  "门店搜索"
	@handler systemShopSearch
	post /system/shop/search (ShopSearchRequest) returns (ShopSearchResponse)
}

// **************************  skateboard/mini proto **************************

type (
	LoginRequest {
		ClientType     string `json:"clientType"`
		LoginType      string `json:"loginType"` // wx-login phone-password-login phone-smscode-login
		WechatAuthCode string `json:"WechatAuthcode,optional"`
		Phone          string `json:"phone,optional"`
		Password       string `json:"password,optional"`
		SmsCode        string `json:"smsCode,optonal"`
	}
	LoginResponse {
		Token string `json:"token"`
	}
)

type (
	UserInfoRequest {
	}
	UserInfoResponse {
		User User `json:"user"`
	}
)

type (
	ShopListRequest {
		Page int `json:"page"`
		Size int `json:"size"`
	}
	ShopListResponse {
		Shops []Shop `json:"shops"`
		Total int    `json:"total"`
	}
)

type (
	CoachListRequest {
		ShopId int `json:"shopId"`
	}
	CoachListResponse {
		Coaches []Coach `json:"coach"`
		Total   int     `json:"total"`
	}
)

type (
	CoachReserveRequest {
		CoachId       int    `json:"coachId"`
		TimeSpanBegin string `json:"timeSpanBegin"`
		TimeSpanEnd   string `json:"timeSpanEnd"`
	}
	CoachReserveResponse {
	}
)

// **************************  skateboard/system proto **************************

type (
	CoachCreateRequest {
	}
	CoachCreateResponse {
	}
)

type (
	ShopGetRequest {Id int `path:"id"`}
	ShopGetResponse struct{Shop ShopItem `json:"shop"`}

	ShopSaveRequest {Shop ShopItem `json:"shop"`}
	ShopSaveResponse struct{}

	ShopDeleteRequest {Id int `path:"id"`}
	ShopDeleteResponse struct{}

	ShopUpdateRequest {
		Id int `path:"id"`
		Shop ShopItem `json:"shop"`
	}
	ShopUpdateResponse struct{}

	ShopSearchRequest {
		Page int `json:"page"`
		Size int `json:"size"`
	}
	ShopSearchResponse {
		List  []ShopItem `json:"list"`
		Total int64      `json:"total"`
	}
	ShopItem {
		ShopId       int      `json:"shopId,omitempty,optional"`
		Name         string   `json:"name,omitempty"`
		Introduction string   `json:"introduction,omitempty"`
		Rank         int      `json:"rank,omitempty"`
		Address      *Address `json:"address,omitempty"`
	}
)