// Code generated by goctl. DO NOT EDIT!
// Source: blog.proto

package blogservice

import (
	"context"

	"github.com/tiptok/gz-blog-microsevices/api/protobuf/blog/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Comment                      = v1.Comment
	CreateCommentRequest         = v1.CreateCommentRequest
	CreateCommentResponse        = v1.CreateCommentResponse
	CreatePostRequest            = v1.CreatePostRequest
	CreatePostResponse           = v1.CreatePostResponse
	DeleteCommentRequest         = v1.DeleteCommentRequest
	DeleteCommentResponse        = v1.DeleteCommentResponse
	DeletePostRequest            = v1.DeletePostRequest
	DeletePostResponse           = v1.DeletePostResponse
	GetPostRequest               = v1.GetPostRequest
	GetPostResponse              = v1.GetPostResponse
	ListCommentsByPostIDRequest  = v1.ListCommentsByPostIDRequest
	ListCommentsByPostIDResponse = v1.ListCommentsByPostIDResponse
	ListPostsRequest             = v1.ListPostsRequest
	ListPostsResponse            = v1.ListPostsResponse
	Post                         = v1.Post
	SignInRequest                = v1.SignInRequest
	SignInResponse               = v1.SignInResponse
	SignUpRequest                = v1.SignUpRequest
	SignUpResponse               = v1.SignUpResponse
	UpdateCommentRequest         = v1.UpdateCommentRequest
	UpdateCommentResponse        = v1.UpdateCommentResponse
	UpdatePostRequest            = v1.UpdatePostRequest
	UpdatePostResponse           = v1.UpdatePostResponse
	User                         = v1.User

	BlogService interface {
		SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpResponse, error)
		SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInResponse, error)
		CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*CreatePostResponse, error)
		GetPost(ctx context.Context, in *GetPostRequest, opts ...grpc.CallOption) (*GetPostResponse, error)
		ListPosts(ctx context.Context, in *ListPostsRequest, opts ...grpc.CallOption) (*ListPostsResponse, error)
		UpdatePost(ctx context.Context, in *UpdatePostRequest, opts ...grpc.CallOption) (*UpdatePostResponse, error)
		DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostResponse, error)
		CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*CreateCommentResponse, error)
		DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*DeleteCommentResponse, error)
		UpdateComment(ctx context.Context, in *UpdateCommentRequest, opts ...grpc.CallOption) (*UpdateCommentResponse, error)
		ListCommentsByPostID(ctx context.Context, in *ListCommentsByPostIDRequest, opts ...grpc.CallOption) (*ListCommentsByPostIDResponse, error)
	}

	defaultBlogService struct {
		cli zrpc.Client
	}
)

func NewBlogService(cli zrpc.Client) BlogService {
	return &defaultBlogService{
		cli: cli,
	}
}

func (m *defaultBlogService) SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpResponse, error) {
	client := v1.NewBlogServiceClient(m.cli.Conn())
	return client.SignUp(ctx, in, opts...)
}

func (m *defaultBlogService) SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInResponse, error) {
	client := v1.NewBlogServiceClient(m.cli.Conn())
	return client.SignIn(ctx, in, opts...)
}

func (m *defaultBlogService) CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*CreatePostResponse, error) {
	client := v1.NewBlogServiceClient(m.cli.Conn())
	return client.CreatePost(ctx, in, opts...)
}

func (m *defaultBlogService) GetPost(ctx context.Context, in *GetPostRequest, opts ...grpc.CallOption) (*GetPostResponse, error) {
	client := v1.NewBlogServiceClient(m.cli.Conn())
	return client.GetPost(ctx, in, opts...)
}

func (m *defaultBlogService) ListPosts(ctx context.Context, in *ListPostsRequest, opts ...grpc.CallOption) (*ListPostsResponse, error) {
	client := v1.NewBlogServiceClient(m.cli.Conn())
	return client.ListPosts(ctx, in, opts...)
}

func (m *defaultBlogService) UpdatePost(ctx context.Context, in *UpdatePostRequest, opts ...grpc.CallOption) (*UpdatePostResponse, error) {
	client := v1.NewBlogServiceClient(m.cli.Conn())
	return client.UpdatePost(ctx, in, opts...)
}

func (m *defaultBlogService) DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostResponse, error) {
	client := v1.NewBlogServiceClient(m.cli.Conn())
	return client.DeletePost(ctx, in, opts...)
}

func (m *defaultBlogService) CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*CreateCommentResponse, error) {
	client := v1.NewBlogServiceClient(m.cli.Conn())
	return client.CreateComment(ctx, in, opts...)
}

func (m *defaultBlogService) DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*DeleteCommentResponse, error) {
	client := v1.NewBlogServiceClient(m.cli.Conn())
	return client.DeleteComment(ctx, in, opts...)
}

func (m *defaultBlogService) UpdateComment(ctx context.Context, in *UpdateCommentRequest, opts ...grpc.CallOption) (*UpdateCommentResponse, error) {
	client := v1.NewBlogServiceClient(m.cli.Conn())
	return client.UpdateComment(ctx, in, opts...)
}

func (m *defaultBlogService) ListCommentsByPostID(ctx context.Context, in *ListCommentsByPostIDRequest, opts ...grpc.CallOption) (*ListCommentsByPostIDResponse, error) {
	client := v1.NewBlogServiceClient(m.cli.Conn())
	return client.ListCommentsByPostID(ctx, in, opts...)
}
